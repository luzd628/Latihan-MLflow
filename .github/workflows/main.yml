name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  CSV_URL: "MLproject/train_pca.csv"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
 
      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
 
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow gdown google-api-python-client google-auth google-auth-oauthlib google-auth-httplib2

      # 5. Simpan credential dari GitHub Secrets ke file
      - name: Write GDrive Credentials to file
        run: |
          echo '${{ secrets.GDRIVE_OAUTH_CREDENTIALS }}' > gdrive_credentials.json

      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          mlflow run MLproject --env-manager=local 
      
     # Upload to Google Drive
      - name: Upload mlruns to Google Drive
        run: |
          pip install --upgrade google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

          echo "${{ secrets.GDRIVE_OAUTH_CREDENTIALS }}" > gdrive_credentials.json

          python <<EOF
          import os
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload

          # Auth setup
          creds = service_account.Credentials.from_service_account_file(
              "gdrive_credentials.json",
              scopes=["https://www.googleapis.com/auth/drive"]
          )
          service = build("drive", "v3", credentials=creds)

          folder_id = "${{ secrets.GDRIVE_FOLDER_ID }}"
          upload_dir = "mlruns"

          for root, _, files in os.walk(upload_dir):
              for file in files:
                  file_path = os.path.join(root, file)
                  file_name = os.path.basename(file)

                  file_metadata = {
                      "name": file_name,
                      "parents": [folder_id]
                  }

                  media = MediaFileUpload(file_path, resumable=True)
                  service.files().create(
                      body=file_metadata,
                      media_body=media,
                      fields="id"
                  ).execute()

                  print(f"Uploaded {file_name}")
          EOF
      
 
  
